---
import { makeRequest } from '../helpers/strapi';
import Navigation from '../components/navigation.astro';
import type { Contentpage, ContentpageData } from '../models/Contentpage';
import { constructFullCmsUrl } from '../helpers/strapi';

export const getStaticPaths = async () => {
    const contentPage = (await makeRequest('contentpages')) as Contentpage;
    const routeParams = contentPage.data.map((contentPage) => ({
        params: { page: contentPage.url },
        props: contentPage,
    }));
    return routeParams;
};

const contentPage: ContentpageData = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>XPRTZ | DÃ© plek voor .NET experts!</title>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
            crossorigin="anonymous"
        />
        <meta name="generator" content={Astro.generator} />
    </head>

    <body class="bg-light">
        <div class="container-fluid g-0">
            <Navigation />
        </div>
        <div class="container">
            <h1 class="text-success mt-4">{contentPage.header}</h1>
            {contentPage.content.map((item) => <p>{item.children[0].text}</p>)}
            <div>
                {
                    contentPage.contacts.map((contact) => (
                        <img src={constructFullCmsUrl(contact.url)} alt="XPRTZ contact" />
                    ))
                }
            </div>
        </div>
        <script
            is:inline
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    </body>
</html>
